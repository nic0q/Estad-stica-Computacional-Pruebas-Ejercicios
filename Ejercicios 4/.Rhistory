lambda = 30
poisonDist <- 1 - ppois(N-1,lambda)
cat("Considerando una distribución de Poisson, la probabilidad de que en la siguiente hora se atienda como mínimo a N pacientes es de",poisonDist,"Lo cual, si somos realistas, es bastante cercano a la realidad del trabajador del area de la salud")
knitr::opts_chunk$set(echo = TRUE)
library("Rlab")
#========================
# Preámbulo
#========================
library("Rlab")
exitos=seq(0:10) #Exitos
distribucion = dhyper(exitos,k,N-k,n)
datos=data.frame(exitos,distribucion)
#Gráfico
library("ggplot2")
grafico = ggplot(data=datos,aes(x=exitos,y=distribucion))
grafico = grafico + geom_bar(stat="identity",fill="lightblue3")
grafico = grafico + theme_bw() + ggtitle("Distribución de
probabilidades")
grafico = grafico + xlab("Hombres con marcador de cromosoma") + ylab("Probabilidad")
plot(grafico)
x = 5 # Numero de llamadas que se hacen en 1 hora
# Regla de 3
#8 llamadas -> 1 hora
#lambda(var)-> 1 hora
lambda = 8
#P(X=5)
dpois(x,lambda)
# P(X<=3)
x = 3
# Probabilidad acumulada de x = 0 a x = 3
ppois(x,lambda)
N = 800 # numero de elementos de la población (Total)
k = 240 # 30% de 800 hombres que tiene el marcador
n = 10  # tamaño de la muestra (10 hombres)
x = 1   # Escoger a 1 hombre que tenga el marcador
dhyper(x,k,N-k,n)
# P(x>1)
# x > 1
phyper(x,k,N-k,n,lower.tail = F)
#========================
# Preámbulo
#========================
library("Rlab")
exitos=seq(0:10) #Exitos
distribucion = dhyper(exitos,k,N-k,n)
datos=data.frame(exitos,distribucion)
#Gráfico
library("ggplot2")
grafico = ggplot(data=datos,aes(x=exitos,y=distribucion))
grafico = grafico + geom_bar(stat="identity",fill="lightblue3")
grafico = grafico + theme_bw() + ggtitle("Distribución de
probabilidades")
grafico = grafico + xlab("Hombres con marcador de cromosoma") + ylab("Probabilidad")
plot(grafico)
#========================
# Preámbulo
#========================
library("Rlab")
exitos=seq(0:10) #Exitos
distribucion = distribHyper
datos=data.frame(exitos,distribucion)
#Gráfico
library("ggplot2")
grafico = ggplot(data=datos,aes(x=exitos,y=distribucion))
grafico = grafico + geom_bar(stat="identity",fill="lightblue3")
grafico = grafico + theme_bw() + ggtitle("Distribución de
probabilidades")
grafico = grafico + xlab("Hombres con marcador de cromosoma") + ylab("Probabilidad")
plot(grafico)
library("Rlab")
library("ggplot2")
library(tidyr)
library(dplyr)
library(plyr)          #Previamente descargue install.packages("plyr)
library(tidyverse)
#========================
# Preámbulo
#========================
exitos=seq(0:10) #Exitos
distribucion = distribHyper
datos=data.frame(exitos,distribucion)
#Gráfico
grafico = ggplot(data=datos,aes(x=exitos,y=distribucion))
grafico = grafico + geom_bar(stat="identity",fill="lightblue3")
grafico = grafico + theme_bw() + ggtitle("Distribución de
probabilidades")
grafico = grafico + xlab("Hombres con marcador de cromosoma") + ylab("Probabilidad")
plot(grafico)
#========================
# Preámbulo
#========================
exitos=seq(0:59) #Exitos
distribucion = distribHyper
datos=data.frame(exitos,distribucion)
#Gráfico
grafico = ggplot(data=datos,aes(x=exitos,y=distribucion))
grafico = grafico + geom_bar(stat="identity",fill="lightblue3")
grafico = grafico + theme_bw() + ggtitle("Distribución de
probabilidades")
grafico = grafico + xlab("Hombres con marcador de cromosoma") + ylab("Probabilidad")
plot(grafico)
library("Rlab")
library(tidyr)
library(dplyr)
library(plyr)          #Previamente descargue install.packages("plyr)
library(tidyverse)
source("cargar_datos.R") #Descargue y guarde en la carpeta principal de su respuesta
nombre1= "NICOLAS ANDRE FARFAN CHENEAUX"
nombre2= "JOHN PATRICIO SERRANO CARRASCO"
datos = cargar_datos(nombre1,nombre2)
# (Testear Datos) knitr::kable(head(datos[,2:ncol(datos)])) #kable pertenece a la biblioteca knitr
# GRAFICO
pacientes = seq(1:40)
datospoi=data.frame(pacientes,poisonDist)
grafico2 = ggplot(data=datospoi,aes(x=pacientes , y=poisonDist))
grafico2 = grafico2 + geom_bar(stat="identity",fill="lightblue3")
grafico2 = grafico2 + theme_bw() + ggtitle("Distribución de
probabilidades")
grafico2 = grafico2 + xlab("Pacientes") + ylab("Probabilidad")
plot(grafico2)
pacientes = seq(1:40)
datospoi=data.frame(pacientes,poisonDist)
grafico2 = ggplot(data=datospoi,aes(x=pacientes , y=poisonDist))
grafico2 = grafico2 + geom_bar(stat="identity",fill="lightblue3")
grafico2 = grafico2 + theme_bw() + ggtitle("Distribución de
probabilidades")
grafico2 = grafico2 + xlab("Pacientes") + ylab("Probabilidad")
plot(grafico2)
N=sample(seq(5,50),1)
prob_poisson = dpois(N,30)
pacientes = seq(1:40)
datospoi=data.frame(pacientes,prob_poisson)
grafico2 = ggplot(data=datospoi,aes(x=pacientes , y=prob_poisson))
grafico2 = grafico2 + geom_bar(stat="identity",fill="lightblue3")
grafico2 = grafico2 + theme_bw() + ggtitle("Distribución de
probabilidades")
grafico2 = grafico2 + xlab("Pacientes") + ylab("Probabilidad")
plot(grafico2)
# GRAFICO
personas=seq(10:60)
lambda=30
distribucion = dpois(personas,lambda)
datos=data.frame(personas,distribucion)
library("ggplot2")
grafico = ggplot(data=datos,aes(x=personas,y=distribucion))
grafico = grafico + geom_bar(stat="identity",fill="lightblue3")
grafico = grafico + theme_bw() + ggtitle("Probabilidad que en la siguiente hora se atienda como mínimo a N pacientes")
grafico = grafico + xlab("Pacientes(N)") + ylab("Probabilidad")
plot(grafico)
# GRAFICO
pacientes=seq(10:60)
distribucion = dpois(pacientes,lambda)
datos=data.frame(pacientes,distribucion)
library("ggplot2")
grafico = ggplot(data=datos,aes(x=pacientes,y=distribucion))
grafico = grafico + geom_bar(stat="identity",fill="lightblue3")
grafico = grafico + theme_bw() + ggtitle("Probabilidad que en la siguiente hora se atienda como mínimo a N pacientes")
grafico = grafico + xlab("Pacientes(N)") + ylab("Probabilidad")
plot(grafico)
# GRAFICO
pacientes=seq(10:60)
datos=data.frame(pacientes,poisonDist)
library("ggplot2")
grafico = ggplot(data=datos,aes(x=pacientes,y=poisonDist))
grafico = grafico + geom_bar(stat="identity",fill="lightblue3")
grafico = grafico + theme_bw() + ggtitle("Probabilidad Poisson")
grafico = grafico + xlab("Pacientes") + ylab("Probabilidad")
plot(grafico)
# GRAFICO
pacientes=seq(10:60)
distribucion = dpois(pacientes,lambda)
datos=data.frame(pacientes,distribucion)
library("ggplot2")
grafico = ggplot(data=datos,aes(x=pacientes,y=distribucion))
grafico = grafico + geom_bar(stat="identity",fill="lightblue3")
grafico = grafico + theme_bw() + ggtitle("Probabilidad Poisson")
grafico = grafico + xlab("Pacientes") + ylab("Probabilidad")
plot(grafico)
totalDiasEstada <- sum(datos["DE"]*datos["freq"])
library("Rlab")
exitos=seq(0:10) #Exitos
distribucion = dhyper(exitos,k,N-k,n)
datos=data.frame(exitos,distribucion)
#Gráfico
library("ggplot2")
grafico = ggplot(data=datos,aes(x=exitos,y=distribucion))
grafico = grafico + geom_bar(stat="identity",fill="lightblue3")
grafico = grafico + theme_bw() + ggtitle("Distribución de
probabilidades")
grafico = grafico + xlab("Hombres con marcador de cromosoma") + ylab("Probabilidad")
plot(grafico)
N = sum((datos %>% filter(diagnostico == patologiaLetal)) %>% select(freq))
library("ggplot2")
library("Rlab")
library(tidyr)
library(dplyr)
library(plyr)          #Previamente descargue install.packages("plyr)
library(tidyverse)
source("cargar_datos.R") #Descargue y guarde en la carpeta principal de su respuesta
nombre1= "NICOLAS ANDRE FARFAN CHENEAUX"
nombre2= "JOHN PATRICIO SERRANO CARRASCO"
datos = cargar_datos(nombre1,nombre2)
# (Testear Datos) knitr::kable(head(datos[,2:ncol(datos)])) #kable pertenece a la biblioteca knitr
N = sum((datos %>% filter(diagnostico == patologiaLetal)) %>% select(freq))
x = sample(seq(5,50),1) # numero de elementos de la población
n = 100
k <- sum((datos %>% filter(diagnostico == patologiaLetal & egreso == "Fallecido(a)")) %>% select(freq))
distribHyper <- dhyper(x,k,N-k,n)
cat("Considerando una distribución hipergeométrica, tenemos que la probabilidad de que si el proximo año se hospitalizan", n ,"personas con esa patología, N de ellas fallezcan es de", distribHyper)
library("Rlab")
exitos=seq(0:10) #Exitos
distribucion = dhyper(exitos,k,N-k,n)
datos=data.frame(exitos,distribucion)
#Gráfico
library("ggplot2")
grafico = ggplot(data=datos,aes(x=exitos,y=distribucion))
grafico = grafico + geom_bar(stat="identity",fill="lightblue3")
grafico = grafico + theme_bw() + ggtitle("Distribución de
probabilidades")
grafico = grafico + xlab("Hombres con marcador de cromosoma") + ylab("Probabilidad")
plot(grafico)
library("Rlab")
exitos=seq(0:20) #Exitos
distribucion = dhyper(exitos,k,N-k,n)
datos=data.frame(exitos,distribucion)
#Gráfico
library("ggplot2")
grafico = ggplot(data=datos,aes(x=exitos,y=distribucion))
grafico = grafico + geom_bar(stat="identity",fill="lightblue3")
grafico = grafico + theme_bw() + ggtitle("Distribución de
probabilidades")
grafico = grafico + xlab("Hombres con marcador de cromosoma") + ylab("Probabilidad")
plot(grafico)
# GRAFICO
pacientes=seq(5:60)
lambda=30
poissondist = dpois(pacientes,lambda)
datospoi=data.frame(pacientes,poissondist)
grafico = ggplot(data=datospoi,aes(x = pacientes,y=poissondist))
grafico = grafico + geom_bar(stat="identity",fill="lightblue3")
grafico = grafico + theme_bw() + ggtitle("Grafico Distribución de Poisson de N Pacientes")
grafico = grafico + xlab("Pacientes") + ylab("Probabilidad de que el paciente sea atendido en la siguiente hora")
plot(grafico)
library("Rlab")
exitos=seq(0:20) #Exitos
distribucion = dhyper(exitos,k,N-k,n)
datos=data.frame(exitos,distribucion)
#Gráfico
library("ggplot2")
grafico = ggplot(data=datos,aes(x=exitos,y=distribucion))
grafico = grafico + geom_bar(stat="identity",fill="lightblue3")
grafico = grafico + theme_bw() + ggtitle("Grafico de Distribución N fallezcan")
grafico = grafico + xlab("Personas fallecidas por la patologia") + ylab("Probabilidad de que fallezcan N personas")
plot(grafico)
knitr::opts_chunk$set(echo = TRUE)
#Lectura de datos
datos=read.csv("DEFUNCIONES_FUENTE_DEIS_2016_2022_28042022.csv",sep=";",header=T,check.names = F)
#Tabla de frecuencia variables cuanlitativas
#Frecuencia
fi=-as.numeric(sort(-table(datos$PREVI))) #Frecuencia absoluta
fac=cumsum(fi)                           #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100           #Frecuencia relativa
frac=cumsum(fri)                         #Frecuencia relativa acumulada
previ=c("FONASA","ISAPRE","SIN PREVISIÓN","OTRA","DIPRECA","CAPREDENA","IGNORADA")
#Tabla
frec_previ=data.frame(previ,fi,fac,fri=round(fri,2),frac=round(frac,2))
#Tabla de frecuencia variables cuantitativas
#Frecuencia
fi=as.numeric(table(datos$EDAD))  #Frecuencia absoluta
fac=cumsum(fi)                    #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100    #Frecuencia relativa
frac=cumsum(fri)                  #Frecuencia relativa acumulada
#Tabla
edad=sort(unique(datos$EDAD))
frec_edad=data.frame(edad,fi,fac,fri=round(fri,2),frac=round(frac,2))
#Visualización
knitr::kable(head(frec_edad,5))
knitr::opts_chunk$set(echo = TRUE)
#Lectura de datos
datos=read.data("arrhythmia.data",sep=";",header=T,check.names = F)
knitr::opts_chunk$set(echo = TRUE)
#Lectura de datos
datos=read.data("arrhythmia.data")
knitr::opts_chunk$set(echo = TRUE)
#Lectura de datos
datos <- read.data("arrhythmia.data")
knitr::opts_chunk$set(echo = TRUE)
#Lectura de datos
datos=read.csv("winequality-red.csv",sep=";",header=T,check.names = F)
#Tabla de frecuencia variables cuantitativas
#Frecuencia
fi=as.numeric(table(datos$chlorides))  #Frecuencia absoluta
fac=cumsum(fi)                    #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100    #Frecuencia relativa
frac=cumsum(fri)                  #Frecuencia relativa acumulada
#Tabla
edad=sort(unique(datos$EDAD))
frec_edad=data.frame(edad,fi,fac,fri=round(fri,2),frac=round(frac,2))
#Tabla de frecuencia variables cuanlitativas
#Frecuencia
fi=-as.numeric(sort(-table(datos$chlorides))) #Frecuencia absoluta
fac=cumsum(fi)                           #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100           #Frecuencia relativa
frac=cumsum(fri)                         #Frecuencia relativa acumulada
previ=c("FONASA","ISAPRE","SIN PREVISIÓN","OTRA","DIPRECA","CAPREDENA","IGNORADA")
#Tabla
frec_previ=data.frame(previ,fi,fac,fri=round(fri,2),frac=round(frac,2))
#Tabla de frecuencia variables cuanlitativas
#Frecuencia
fi=-as.numeric(sort(-table(datos$chlorides))) #Frecuencia absoluta
fac=cumsum(fi)                           #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100           #Frecuencia relativa
frac=cumsum(fri)                         #Frecuencia relativa acumulada
previ=c("FONASA","ISAPRE","SIN PREVISIÓN","OTRA","DIPRECA","CAPREDENA","IGNORADA","fixed acidity","Ph","alcohol","sulphates")
#Tabla
frec_previ=data.frame(previ,fi,fac,fri=round(fri,2),frac=round(frac,2))
#Tabla de frecuencia variables cuanlitativas
#Frecuencia
fi=-as.numeric(sort(-table(datos$chlorides))) #Frecuencia absoluta
fac=cumsum(fi)                           #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100           #Frecuencia relativa
frac=cumsum(fri)                         #Frecuencia relativa acumulada
previ=c("FONASA","ISAPRE","SIN PREVISIÓN","OTRA","DIPRECA","CAPREDENA","IGNORADA","fixed acidity","Ph","alcohol","sulphates","quality")
#Tabla
frec_previ=data.frame(previ,fi,fac,fri=round(fri,2),frac=round(frac,2))
#Tabla de frecuencia variables cuanlitativas
#Frecuencia
fi=-as.numeric(sort(-table(datos$chlorides))) #Frecuencia absoluta
fac=cumsum(fi)                           #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100           #Frecuencia relativa
frac=cumsum(fri)                         #Frecuencia relativa acumulada
previ=c("FONASA","ISAPRE","SIN PREVISIÓN","OTRA","DIPRECA","CAPREDENA","IGNORADA","fixed acidity","Ph","alcohol","sulphates")
#Tabla
frec_previ=data.frame(previ,fi,fac,fri=round(fri,2),frac=round(frac,2))
#Tabla de frecuencia variables cuanlitativas
#Frecuencia
fi=-as.numeric(sort(-table(datos$chlorides))) #Frecuencia absoluta
fac=cumsum(fi)                           #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100           #Frecuencia relativa
frac=cumsum(fri)                         #Frecuencia relativa acumulada
previ=c("FONASA","ISAPRE","SIN PREVISIÓN","OTRA","DIPRECA","CAPREDENA","IGNORADA","fixed acidity","Ph","alcohol","sulphates")
#Tabla
frec_previ=data.frame(previ,fi,fac,fri=round(fri,2),frac=round(frac,2))
knitr::opts_chunk$set(echo = TRUE)
#Lectura de datos
datos=read.csv("winequality-red.csv",sep=";",header=T,check.names = F)
#Tabla de frecuencia variables cuanlitativas
#Frecuencia
fi=-as.numeric(sort(-table(datos$chlorides))) #Frecuencia absoluta
fac=cumsum(fi)                           #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100           #Frecuencia relativa
frac=cumsum(fri)                         #Frecuencia relativa acumulada
previ=c("FONASA","ISAPRE","SIN PREVISIÓN","OTRA","DIPRECA","CAPREDENA","IGNORADA","fixed acidity","Ph","alcohol","sulphates")
#Tabla
frec_previ=data.frame(previ,fi,fac,fri=round(fri,2),frac=round(frac,2))
#Tabla de frecuencia variables cuanlitativas
#Frecuencia
fi=-as.numeric(sort(-table(datos$chlorides))) #Frecuencia absoluta
fac=cumsum(fi)                           #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100           #Frecuencia relativa
frac=cumsum(fri)                         #Frecuencia relativa acumulada
previ=c("FONASA","ISAPRE","SIN PREVISIÓN","OTRA","DIPRECA","CAPREDENA","IGNORADA","fixed acidity","Ph","alcohol","sulphates","a")
#Tabla
frec_previ=data.frame(previ,fi,fac,fri=round(fri,2),frac=round(frac,2))
knitr::opts_chunk$set(echo = TRUE)
#Lectura de datos
datos=read.csv("winequality-red.csv",sep=";",header=T,check.names = F)
#Tabla de frecuencia variables cuanlitativas
#Frecuencia
fi=-as.numeric(sort(-table(datos$chlorides))) #Frecuencia absoluta
fac=cumsum(fi)                           #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100           #Frecuencia relativa
frac=cumsum(fri)                         #Frecuencia relativa acumulada
previ=c("FONASA","ISAPRE","SIN PREVISIÓN","OTRA","DIPRECA","CAPREDENA","IGNORADA","fixed acidity","Ph","alcohol","sulphates","a")
#Tabla
frec_previ=data.frame(previ,fi,fac,fri=round(fri,2),frac=round(frac,2))
#Tabla de frecuencia variables cuanlitativas
#Frecuencia
fi=-as.numeric(sort(-table(datos$chlorides))) #Frecuencia absoluta
fi
knitr::opts_chunk$set(echo = TRUE)
#Lectura de datos
datos=read.csv("bank.csv",sep=";",header=T,check.names = F)
#Tabla de frecuencia variables cuanlitativas
#Frecuencia
fi=-as.numeric(sort(-table(datos$chlorides))) #Frecuencia absoluta
fac=cumsum(fi)                           #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100           #Frecuencia relativa
frac=cumsum(fri)                         #Frecuencia relativa acumulada
previ=c("FONASA","ISAPRE","SIN PREVISIÓN","OTRA","DIPRECA","CAPREDENA","IGNORADA","fixed acidity","Ph","alcohol","sulphates","a")
#Tabla
frec_previ=data.frame(previ,fi,fac,fri=round(fri,2),frac=round(frac,2))
#Tabla de frecuencia variables cuanlitativas
#Frecuencia
fi=-as.numeric(sort(-table(datos$chlorides))) #Frecuencia absoluta
fac=cumsum(fi)                           #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100           #Frecuencia relativa
frac=cumsum(fri)                         #Frecuencia relativa acumulada
previ=c("FONASA","ISAPRE","SIN PREVISIÓN","OTRA","DIPRECA","CAPREDENA","IGNORADA","fixed acidity","Ph","alcohol","sulphates","a"",tertiary",",a")
#Tabla de frecuencia variables cuanlitativas
#Frecuencia
fi=-as.numeric(sort(-table(datos$chlorides))) #Frecuencia absoluta
fac=cumsum(fi)                           #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100           #Frecuencia relativa
frac=cumsum(fri)                         #Frecuencia relativa acumulada
previ=c("FONASA","ISAPRE","SIN PREVISIÓN","OTRA","DIPRECA","CAPREDENA","IGNORADA","fixed acidity","Ph","alcohol","sulphates","a","tertiary",",a")
#Tabla
frec_previ=data.frame(previ,fi,fac,fri=round(fri,2),frac=round(frac,2))
#Tabla de frecuencia variables cuanlitativas
#Frecuencia
fi=-as.numeric(sort(-table(datos$chlorides))) #Frecuencia absoluta
fac=cumsum(fi)                           #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100           #Frecuencia relativa
frac=cumsum(fri)                         #Frecuencia relativa acumulada
previ=c("FONASA","ISAPRE","SIN PREVISIÓN","OTRA","DIPRECA","CAPREDENA","IGNORADA","fixed acidity","Ph","alcohol","sulphates","a","tertiary",",a","a","a","a")
#Tabla
frec_previ=data.frame(previ,fi,fac,fri=round(fri,2),frac=round(frac,2))
#Tabla de frecuencia variables cuantitativas
#Frecuencia
fi=as.numeric(table(datos$age))  #Frecuencia absoluta
fac=cumsum(fi)                    #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100    #Frecuencia relativa
frac=cumsum(fri)                  #Frecuencia relativa acumulada
#Tabla
edad=sort(unique(datos$EDAD))
frec_edad=data.frame(edad,fi,fac,fri=round(fri,2),frac=round(frac,2))
#Tabla de frecuencia variables cuantitativas
#Frecuencia
fi=as.numeric(table(datos$age))  #Frecuencia absoluta
fac=cumsum(fi)                    #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100    #Frecuencia relativa
frac=cumsum(fri)                  #Frecuencia relativa acumulada
#Tabla
edad=sort(unique(datos$age))
frec_edad=data.frame(edad,fi,fac,fri=round(fri,2),frac=round(frac,2))
#Visualización
knitr::kable(head(frec_edad,5))
#Tabla de frecuencia variables cuantitativas
#Frecuencia
fi=as.numeric(table(datos$age))  #Frecuencia absoluta
fac=cumsum(fi)                    #Frecuencia acumulada
fri=as.numeric(fi/sum(fi))*100    #Frecuencia relativa
frac=cumsum(fri)                  #Frecuencia relativa acumulada
#Tabla
edad=sort(unique(datos$age))
frec_edad=data.frame(edad,fi,fac,fri=round(fri,2),frac=round(frac,2))
#Visualización
knitr::kable(head(frec_edad,5))
knitr::kable(tail(frec_edad,5))
library("BHH2")
knitr::opts_chunk$set(echo = TRUE)
#Lectura de datos
datos=read.csv("bank.csv",sep=";",header=T,check.names = F)
dotPlot(datos$EDAD,xlab = "EDAD (años)",)
dotPlot(datos$age,xlab = "EDAD (años)",)
grafico=ggplot(datos,aes(EDAD)) # Gráfico y datos base
grafico=ggplot(datos,aes(age)) # Gráfico y datos base
library("BHH2")
library("ggplot")
install.packages("tidyverse")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library("BHH2")
library("ggplot")
library("BHH2")
knitr::opts_chunk$set(echo = TRUE)
#Lectura de datos
datos=read.csv("bank.csv",sep=";",header=T,check.names = F)
dotPlot(datos$age,xlab = "EDAD (años)",)
grafico=ggplot(datos,aes(age)) # Gráfico y datos base
library("BHH2")
library(ggplot2)
library("BHH2")
library("ggplot2")
install.packages("ggplot2")
library("BHH2")
library("ggplot2")
devtools::install_github("tidyverse/ggplot2")
install.packages("tidyverse")
library("BHH2")
library("ggplot2")
install.packages("plotly")
library("BHH2")
library("BHH2")
library(plotly)
install.packages("ggplot2")
grafico=ggplot(datos,aes(age)) # Gráfico y datos base
grafico=ggplot(datos,aes(age)) # Gráfico y datos base
library("BHH2")
library(plotly)
library("BHH2")
library("plotly")
library("BHH2")
library("ggplot2")
library("ggplot2")
library("plotly")
library("plotly")
library("ggplot2")
library("ggplot2")
grafico=ggplot(datos,aes(age)) # Gráfico y datos base
library("ggplot2")
library("plotly")
library("BHH2")
knitr::opts_chunk$set(echo = TRUE)
#Lectura de datos
datos=read.csv("bank.csv",sep=";",header=T,check.names = F)
datos=read.csv("bank.csv",sep=";",header=T,check.names = F)
setwd("C:/Users/nicol/OneDrive - usach.cl/Universidad/Nivel5/estaca/Ejercicios 4 Nícolas Farfán")
